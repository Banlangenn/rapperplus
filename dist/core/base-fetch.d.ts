declare const _default: "\n/**\n * 项目的公共请求方法\n * 用户可在此加入自定义逻辑，比如请求、响应数据过滤\n * (如有需要可以修改，项目初始化后就不会更新此文件)\n */\n\n/** 服务端api地址，默认是根目录相对路径 */\nconst requestPrefix = 'https://rap2api.alibaba-inc.com/app/mock/3402'\n\ninterface IRequestParams {\n    url: string\n    /** 请求类型 */\n    method?: 'GET' | 'POST' | 'PUT' | 'DELETE' | 'OPTIONS' | 'PATCH' | 'HEAD'\n    params?: any\n}\n\nexport default async <Res>(params: IRequestParams): Promise<Res> => {\n    let requestUrl = getUrl(params.url, requestPrefix)\n    const requestParams: any = {\n        credentials: 'include',\n        method: params.method || 'GET',\n        headers: { 'Content-Type': 'application/json' },\n    }\n\n    if (requestParams.method === 'GET') {\n        requestUrl = requestUrl + '?' + locationStringify(params.params)\n    } else if (params.params) {\n        requestParams.body = JSON.stringify(params.params)\n    }\n    const res = await fetch(requestUrl, requestParams)\n    const retJSON = res.clone() // clone before return\n    return retJSON.json()\n}\n\n/**\n * search 参数转换，比如 { a: 1, b: 2, c: undefined } 转换成 \"a=1&b=2\"\n * 会自动删除 undefined\n */\nfunction locationStringify(\n    obj: {\n        [key: string]: any\n    } = {}\n): string {\n    return Object.entries(obj).reduce((str, [key, value]) => {\n        if (value === undefined) {\n            return str\n        }\n        str = str ? str + '&' : str\n        return str + key + '=' + value\n    }, '')\n}\n\n/** 拼接组合request链接 */\nconst getUrl = (url: string, requestPrefix?: string): string => {\n  if (!requestPrefix) {\n    requestPrefix = ''\n  }\n  requestPrefix = requestPrefix.replace(/\\/$/, '')\n  url = url.replace(/^\\//, '')\n  return requestPrefix + '/' + url\n}\n";
export default _default;
